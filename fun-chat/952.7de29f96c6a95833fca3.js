"use strict";(self.webpackChunkfun_chat=self.webpackChunkfun_chat||[]).push([[952],{952:(e,t,s)=>{s.r(t),s.d(t,{Login:()=>v});var i=s(766);class n extends i.S{constructor(e){super({tag:"input",classNames:["input"]}),this.validationFn=null,this.minimumLength=e.minimumLength,e.callback&&(this.validationFn=e.callback),this.setupInput(e),this.setupEventListener()}setupInput(e){const t=this.getElement();t.setAttribute("type",e.type),t.setAttribute("placeholder",e.label),e.required&&t.setAttribute("required",`${e.required}`)}setupEventListener(){this.getElement().addEventListener("input",this.handleInput.bind(this))}handleInput(e){const t=e.target.value;this.validationFn&&(this.validationFn(t,this.minimumLength)?this.getElement().classList.remove("error"):this.getElement().classList.add("error"))}}class r extends i.S{constructor(e){super({tag:"button",classNames:["button"]}),this.setupInput(e)}setupInput(e){const t=this.getElement();t.textContent=e.label,e.disabled&&(t.disabled=e.disabled)}}var a=s(226);class o{constructor(){this.errorMessageElement=new a.Y({tag:"div",classNames:["error__massage"],textContent:"\n    The name field must contain at least 3 characters,\n    the password field must contain at least 4 characters,\n    both in Latin characters, and start with a capital letter.\n"})}showError(e){this.errorMessageElement&&e.after(this.errorMessageElement.getElement())}hideError(){this.errorMessageElement&&(this.errorMessageElement.getElement().remove(),this.errorMessageElement=null)}}class l{static isAllowedCharacters(e){return/^[a-zA-Z-]+$/.test(e)}static isLetter(e){return/^[A-Za-z]$/.test(e)}static isFirstLetterUpperCase(e){const t=e.charAt(0);return l.isLetter(t)&&t===t.toUpperCase()}static hasMinimumLength(e,t){return e.length>=t}}var h=s(624);class u{constructor(e,t,s){this.delay=5e3,this.minimumLengthName=3,this.minimumLengthPassword=4,this.loginService=e,this.form=t,this.errorAuth=s}validateForm(e,t){const s=l.isAllowedCharacters(e),i=l.isFirstLetterUpperCase(e),n=l.hasMinimumLength(e,t);return s&&i&&n}handleSubmitForm(){const{inputLogin:e,inputPass:t}=this.form,s=(null==e?void 0:e.getElement()).value,i=(null==t?void 0:t.getElement()).value,n=this.validateForm(s,this.minimumLengthName),r=this.validateForm(i,this.minimumLengthPassword);if(e&&!n&&r)return void this.showErrorMessage(e);if(t&&!r&&n)return void this.showErrorMessage(t);if(t&&e&&!r&&!n)return void this.showErrorMessage(e,t);(null==e?void 0:e.getElement()).value="",(null==t?void 0:t.getElement()).value="";const a=h.d.generateRequestId();this.saveUserDataToLocalStorage({id:a,login:s,password:i}),this.authorization()}authorization(){const e=h.d.getUserData();e&&this.loginService.login(e.id,e.login,e.password,this.errorAuth)}showErrorMessage(e,t){const{buttonLogin:s}=this.form;if(t){const i=new o,n=new o;i.showError(e.getElement()),n.showError(t.getElement()),(null==s?void 0:s.getElement()).disabled=!0,setTimeout((()=>{this.closeErrorMessage(i,n)}),this.delay)}else{const t=new o;t.showError(e.getElement()),(null==s?void 0:s.getElement()).disabled=!0,setTimeout((()=>{this.closeErrorMessage(t)}),this.delay)}}closeErrorMessage(e,t){const{buttonLogin:s}=this.form;t?(e.hideError(),t.hideError(),(null==s?void 0:s.getElement()).disabled=!1):(e.hideError(),(null==s?void 0:s.getElement()).disabled=!1)}saveUserDataToLocalStorage({id:e,login:t,password:s}){h.d.saveUserData({id:e,login:t,password:s})}}class d extends i.S{constructor(e,t){super({tag:"form",classNames:["form"]}),this.inputLogin=null,this.inputPass=null,this.buttonLogin=null,this.minimumLengthName=3,this.minimumLengthPassword=4,this.loginController=new u(e.getLoginService(),this,t),this.setupFormContent(),this.setupEventListener()}setupFormContent(){this.inputLogin=new n({type:"text",label:"Login",required:!0,callback:this.validate.bind(this),minimumLength:this.minimumLengthName}),this.inputPass=new n({type:"password",label:"Password",required:!0,callback:this.validate.bind(this),minimumLength:this.minimumLengthPassword}),this.buttonLogin=new r({label:"Submit"}),[this.inputLogin.getElement(),this.inputPass.getElement(),this.buttonLogin.getElement()].forEach((e=>{this.addInnerElement(e)}))}setupEventListener(){this.getElement().addEventListener("submit",this.onHandleSubmit.bind(this))}validate(e,t){return this.loginController.validateForm(e,t)}onHandleSubmit(e){e.preventDefault(),this.loginController.handleSubmitForm()}}class m extends i.S{constructor(){super({tag:"h3",classNames:["login__title"],textContent:"Authorization"})}}class g extends i.S{constructor(){super({tag:"button",classNames:["error__close"],textContent:"close"})}}class c extends i.S{constructor(){super({tag:"p",classNames:["error__text"],textContent:"A user with this login is already authorized"})}}class p extends i.S{constructor(){super({tag:"div",classNames:["modal"]})}}class E extends i.S{constructor(){super({tag:"div",classNames:["overlay","hidden"]}),this.errorWrapper=new p,this.errorMessage=new c,this.errorBtn=new g,this.showMessage=this.showMessage.bind(this),this.hiddenMessage=this.hiddenMessage.bind(this),this.setupErrorAuth(),this.setupEventListener()}showMessage(e){this.errorMessage.getElement().textContent=e,this.getElement().classList.remove("hidden")}hiddenMessage(){this.getElement().classList.add("hidden")}setupEventListener(){this.errorBtn.getElement().addEventListener("click",this.hiddenMessage)}setupErrorAuth(){this.errorWrapper.getElement().append(this.errorMessage.getElement(),this.errorBtn.getElement()),this.addInnerElement(this.errorWrapper.getElement())}}class v extends i.S{constructor(e){super({tag:"section",classNames:["login"]}),this.setupLogin(e)}setupLogin(e){const t=new E,s=(new m).getElement(),i=new d(e,t).getElement();this.getElement().append(s,i,t.getElement())}}}}]);